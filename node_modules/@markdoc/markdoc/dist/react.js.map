{
  "version": 3,
  "sources": ["../src/renderers/react/shared.ts", "../src/renderers/react/react.ts"],
  "sourcesContent": ["import type { ComponentType } from 'react';\n\ntype Component = ComponentType<unknown>;\n\nexport function tagName(\n  name: string,\n  components: Record<string, Component> | ((string: string) => Component)\n): string | Component {\n  return typeof name !== 'string'\n    ? 'Fragment'\n    : name[0] !== name[0].toUpperCase()\n    ? name\n    : components instanceof Function\n    ? components(name)\n    : components[name];\n}\n", "import { tagName } from './shared';\nimport type { createElement, Fragment, ReactNode } from 'react';\nimport type { RenderableTreeNodes, Scalar } from '../../types';\n\ntype ReactShape = Readonly<{\n  createElement: typeof createElement;\n  Fragment: typeof Fragment;\n}>;\n\nexport default function dynamic(\n  node: RenderableTreeNodes,\n  React: ReactShape,\n  { components = {} } = {}\n) {\n  function deepRender(value: any): any {\n    if (value == null || typeof value !== 'object') return value;\n\n    if (Array.isArray(value)) return value.map((item) => deepRender(item));\n\n    if (value.$$mdtype === 'Tag') return render(value);\n\n    if (typeof value !== 'object') return value;\n\n    const output: Record<string, Scalar> = {};\n    for (const [k, v] of Object.entries(value)) output[k] = deepRender(v);\n    return output;\n  }\n\n  function render(node: RenderableTreeNodes): ReactNode {\n    if (Array.isArray(node))\n      return React.createElement(React.Fragment, null, ...node.map(render));\n\n    if (node === null || typeof node !== 'object') return node;\n\n    const {\n      name,\n      attributes: { class: className, ...attrs } = {},\n      children = [],\n    } = node;\n\n    if (className) attrs.className = className;\n\n    return React.createElement(\n      tagName(name, components),\n      Object.keys(attrs).length == 0 ? null : deepRender(attrs),\n      ...children.map(render)\n    );\n  }\n\n  return render(node);\n}\n"],
  "mappings": ";AAIO,iBACL,MACA,YACoB;AACpB,SAAO,OAAO,SAAS,WACnB,aACA,KAAK,OAAO,KAAK,GAAG,gBACpB,OACA,sBAAsB,WACtB,WAAW,QACX,WAAW;AAAA;;;ACLF,iBACb,MACA,OACA,EAAE,aAAa,OAAO,IACtB;AACA,sBAAoB,OAAiB;AACnC,QAAI,SAAS,QAAQ,OAAO,UAAU;AAAU,aAAO;AAEvD,QAAI,MAAM,QAAQ;AAAQ,aAAO,MAAM,IAAI,CAAC,SAAS,WAAW;AAEhE,QAAI,MAAM,aAAa;AAAO,aAAO,OAAO;AAE5C,QAAI,OAAO,UAAU;AAAU,aAAO;AAEtC,UAAM,SAAiC;AACvC,eAAW,CAAC,GAAG,MAAM,OAAO,QAAQ;AAAQ,aAAO,KAAK,WAAW;AACnE,WAAO;AAAA;AAGT,kBAAgB,OAAsC;AACpD,QAAI,MAAM,QAAQ;AAChB,aAAO,MAAM,cAAc,MAAM,UAAU,MAAM,GAAG,MAAK,IAAI;AAE/D,QAAI,UAAS,QAAQ,OAAO,UAAS;AAAU,aAAO;AAEtD,UAAM;AAAA,MACJ;AAAA,MACA,YAAY,EAAE,OAAO,cAAc,UAAU;AAAA,MAC7C,WAAW;AAAA,QACT;AAEJ,QAAI;AAAW,YAAM,YAAY;AAEjC,WAAO,MAAM,cACX,QAAQ,MAAM,aACd,OAAO,KAAK,OAAO,UAAU,IAAI,OAAO,WAAW,QACnD,GAAG,SAAS,IAAI;AAAA;AAIpB,SAAO,OAAO;AAAA;",
  "names": []
}
