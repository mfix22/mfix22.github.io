declare const _default: {
    if: import("../types").Schema<Readonly<Partial<{
        nodes: Partial<Record<import("../types").NodeType, import("../types").Schema<Readonly<Partial<any>>, string>>>;
        tags: Record<string, import("../types").Schema<Readonly<Partial<any>>, string>>;
        variables: Record<string, any>;
        functions: Record<string, import("../types").ConfigFunction>;
        partials: Record<string, any>;
        validation?: {
            validateFunctions?: boolean | undefined;
        } | undefined;
    }>>, string>;
    else: import("../types").Schema<Readonly<Partial<{
        nodes: Partial<Record<import("../types").NodeType, import("../types").Schema<Readonly<Partial<any>>, string>>>;
        tags: Record<string, import("../types").Schema<Readonly<Partial<any>>, string>>;
        variables: Record<string, any>;
        functions: Record<string, import("../types").ConfigFunction>;
        partials: Record<string, any>;
        validation?: {
            validateFunctions?: boolean | undefined;
        } | undefined;
    }>>, string>;
    partial: import("../types").Schema<Readonly<Partial<{
        nodes: Partial<Record<import("../types").NodeType, import("../types").Schema<Readonly<Partial<any>>, string>>>;
        tags: Record<string, import("../types").Schema<Readonly<Partial<any>>, string>>;
        variables: Record<string, any>;
        functions: Record<string, import("../types").ConfigFunction>;
        partials: Record<string, any>;
        validation?: {
            validateFunctions?: boolean | undefined;
        } | undefined;
    }>>, string>;
    table: import("../types").Schema<Readonly<Partial<{
        nodes: Partial<Record<import("../types").NodeType, import("../types").Schema<Readonly<Partial<any>>, string>>>;
        tags: Record<string, import("../types").Schema<Readonly<Partial<any>>, string>>;
        variables: Record<string, any>;
        functions: Record<string, import("../types").ConfigFunction>;
        partials: Record<string, any>;
        validation?: {
            validateFunctions?: boolean | undefined;
        } | undefined;
    }>>, string>;
};
export default _default;
//# sourceMappingURL=index.d.ts.map